<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
	<node pkg="octomap_server" type="octomap_server_node" name="octomap_server">
		<param name="resolution" value="0.05" />
		
		<!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
		<param name="frame_id" type="string" value="d435_link" />
		
		<!-- maximum range to integrate (speedup!) -->
		<param name="sensor_model/max_range" value="100.0" />
		<param name="latch" value="true"/>
	
	    <param name="pointcloud_max_z" value="10000"/>
		<param name="pointcloud_min_z" value="-1000"/>

		<!-- data source to integrate (PointCloud2) -->
		<remap from="cloud_in" to="/d435/depth/color/points" />
	
	</node>
</launch>
